package io.gomint.proxy.inventory;

/**
 * @author geNAZt
 * @version 1.0
 */
public enum Material {

    // CHECKSTYLE:OFF
    AIR,
    STONE,
    GRASS_BLOCK,
    DIRT,
    COBBLESTONE,
    WOOD_PLANKS,
    SAPLING,
    BEDROCK,
    WATER,
    STATIONARY_WATER,
    LAVA,
    STATIONARY_LAVA,
    SAND,
    GRAVEL,
    GOLD_ORE,
    IRON_ORE,
    COAL_ORE,
    WOOD,
    LEAVES,
    SPONGE,
    GLASS,
    LAPIS_LAZULI_ORE,
    LAPIS_LAZULI_BLOCK,
    DISPENSER,
    SANDSTONE,
    NOTE_BLOCK,
    POWERED_RAIL,
    DETECTOR_RAIL,
    STICKY_PISTON,
    COBWEB,
    TALL_GRASS,
    DEAD_BUSH,
    PISTON,
    PISTON_HEAD,
    WOOL,
    DANDELION,
    FLOWER,
    BROWN_MUSHROOM,
    RED_MUSHROOM,
    BLOCK_OF_GOLD,
    BLOCK_OF_IRON,
    DOUBLE_STONE_SLAB,
    STONE_SLAB,
    BRICKS,
    TNT,
    BOOKSHELF,
    MOSS_STONE,
    OBSIDIAN,
    TORCH,
    FIRE,
    MONSTER_SPAWNER,
    OAK_WOOD_STAIRS,
    CHEST,
    REDSTONE_WIRE,
    DIAMOND_ORE,
    BLOCK_OF_DIAMOND,
    CRAFTING_TABLE,
    CROPS,
    FARMLAND,
    FURNACE,
    BURNING_FURNACE,
    LADDER,
    RAIL,
    COBBLESTONE_STAIRS,
    LEVER,
    STONE_PRESSURE_PLATE,
    WOODEN_PRESSURE_PLATE,
    REDSTONE_ORE,
    GLOWING_REDSTONE_ORE,
    REDSTONE_TORCH_INACTIVE,
    REDSTONE_TORCH_ACTIVE,
    STONE_BUTTON,
    TOP_SNOW,
    ICE,
    SNOW,
    CACTUS,
    CLAY,
    FENCE,
    PUMPKIN,
    NETHERRACK,
    SOUL_SAND,
    GLOWSTONE,
    PORTAL,
    JACK_O_LANTERN,
    REDSTONE_REPEATER_INACTIVE,
    REDSTONE_REPEATER_ACTIVE,
    INVISIBLE_BEDROCK,
    TRAPDOOR,
    MONSTER_EGG,
    STONE_BRICK,
    BROWN_MUSHROOM_BLOCK,
    RED_MUSHROOM_BLOCK,
    IRON_BARS,
    GLASS_PANE,
    MELON_BLOCK,
    PUMPKIN_STEM,
    MELON_STEM,
    VINES,
    FENCE_GATE,
    BRICK_STAIRS,
    STONE_BRICK_STAIRS,
    MYCELIUM,
    LILY_PAD,
    NETHER_BRICK_BLOCK,
    NETHER_BRICK_FENCE,
    NETHER_BRICK_STAIRS,
    ENCHANTMENT_TABLE,
    END_PORTAL,
    END_PORTAL_FRAME,
    END_STONE,
    DRAGON_EGG,
    REDSTONE_LAMP_INACTIVE,
    REDSTONE_LAMP_ACTIVE,
    DROPPER,
    ACTIVATOR_RAIL,
    COCOA,
    SANDSTONE_STAIRS,
    EMERALD_ORE,
    ENDER_CHEST,
    TRIPWIRE_HOOK,
    TRIPWIRE,
    BLOCK_OF_EMERALD,
    SPRUCE_WOOD_STAIRS,
    BIRCH_WOOD_STAIRS,
    JUNGLE_WOOD_STAIRS,
    BEACON,
    COBBLESTONE_WALL,
    CARROTS,
    WOODEN_BUTTON,
    SKULL,
    ANVIL,
    TRAPPED_CHEST,
    WEIGHTED_PRESSURE_PLATE_LIGHT,
    WEIGHTED_PRESSURE_PLATE_HEAVY,
    REDSTONE_COMPARATOR_UNPOWERED,
    REDSTONE_COMPARATOR_POWERED,
    DAYLIGHT_SENSOR,
    BLOCK_OF_REDSTONE,
    NETHER_QUARTZ_ORE,
    BLOCK_OF_QUARTZ,
    QUARTZ_STAIRS,
    WOODEN_DOUBLE_SLAB,
    WOODEN_SLAB,
    STAINED_CLAY,
    STAINED_GLASS_PANE,
    ACACIA_LEAVES,
    ACACIA_WOOD,
    ACACIA_WOOD_STAIRS,
    DARK_OAK_WOOD_STAIRS,
    SLIME_BLOCK,
    IRON_TRAPDOOR,
    PRISMARINE,
    SEA_LANTERN,
    HAY_BALE,
    CARPET,
    HARDENED_CLAY,
    BLOCK_OF_COAL,
    PACKED_ICE,
    SUNFLOWER,
    INVERTED_DAYLIGHT_SENSOR,
    RED_SANDSTONE,
    RED_SANDSTONE_STAIRS,
    DOUBLE_RED_SANDSTONE_SLAB,
    RED_SANDSTONE_SLAB,
    SPRUCE_FENCE_GATE,
    BIRCH_FENCE_GATE,
    JUNGLE_FENCE_GATE,
    DARK_OAK_FENCE_GATE,
    ACACIA_FENCE_GATE,
    GRASS_PATH,
    CHORUS_FLOWER,
    PURPUR_BLOCK,
    PURPUR_STAIRS,
    END_BRICKS,
    END_ROD,
    END_GATEWAY,
    CHORUS_PLANT,
    STAINED_GLASS,
    PODZOL,
    BEETROOT_PLANT,
    STONECUTTER,
    GLOWING_OBSIDIAN,
    NETHER_REACTOR_CORE,
    BLOCK_MOVED_BY_PISTON,
    OBSERVER,
    RESERVED6,
    ALLOW,
    DENY,
    BORDER_BLOCK,
    IRON_SHOVEL( (byte) 1, (short) 251 ),
    IRON_PICKAXE( (byte) 1, (short) 251 ),
    IRON_AXE( (byte) 1, (short) 251 ),
    FLINT_AND_STEEL( (byte) 1, (short) 65 ),
    APPLE,
    BOW( (byte) 1, (short) 385 ),
    ARROW,
    COAL,
    DIAMOND,
    IRON_INGOT,
    GOLD_INGOT,
    IRON_SWORD( (byte) 1, (short) 251 ),
    WOODEN_SWORD( (byte) 1, (short) 60 ),
    WOODEN_SHOVEL( (byte) 1, (short) 60 ),
    WOODEN_PICKAXE( (byte) 1, (short) 60 ),
    WOODEN_AXE( (byte) 1, (short) 60 ),
    STONE_SWORD( (byte) 1, (short) 132 ),
    STONE_SHOVEL( (byte) 1, (short) 132 ),
    STONE_PICKAXE( (byte) 1, (short) 132 ),
    STONE_AXE( (byte) 1, (short) 132 ),
    DIAMOND_SWORD( (byte) 1, (short) 1562 ),
    DIAMOND_SHOVEL( (byte) 1, (short) 1562 ),
    DIAMOND_PICKAXE( (byte) 1, (short) 1562 ),
    DIAMOND_AXE( (byte) 1, (short) 1562 ),
    STICK,
    BOWL,
    MUSHROOM_STEW( (byte) 1),
    GOLDEN_SWORD( (byte) 1, (short) 33 ),
    GOLDEN_SHOVEL( (byte) 1, (short) 33 ),
    GOLDEN_PICKAXE( (byte) 1, (short) 33 ),
    GOLDEN_AXE( (byte) 1, (short) 33 ),
    STRING,
    FEATHER,
    GUNPOWDER,
    WOODEN_HOE( (byte) 1, (short) 60 ),
    STONE_HOE( (byte) 1, (short) 132 ),
    IRON_HOE( (byte) 1, (short) 251 ),
    DIAMOND_HOE( (byte) 1, (short) 1562 ),
    GOLDEN_HOE( (byte) 1, (short) 33 ),
    SEEDS,
    WHEAT,
    BREAD,
    LEATHER_CAP( (byte) 1, (short) 56 ),
    LEATHER_TUNIC( (byte) 1, (short) 81 ),
    LEATHER_PANTS( (byte) 1, (short) 76 ),
    LEATHER_BOOTS( (byte) 1, (short) 56 ),
    CHAIN_HELMET( (byte) 1, (short) 166 ),
    CHAIN_CHESTPLATE( (byte) 1, (short) 241 ),
    CHAIN_LEGGINGS( (byte) 1, (short) 106 ),
    CHAIN_BOOTS( (byte) 1, (short) 196 ),
    IRON_HELMET( (byte) 1, (short) 166 ),
    IRON_CHESTPLATE( (byte) 1, (short) 241 ),
    IRON_LEGGINGS( (byte) 1, (short) 226 ),
    IRON_BOOTS( (byte) 1, (short) 196 ),
    DIAMOND_HELMET( (byte) 1, (short) 364 ),
    DIAMOND_CHESTPLATE( (byte) 1, (short) 529 ),
    DIAMOND_LEGGINGS( (byte) 1, (short) 496 ),
    DIAMOND_BOOTS( (byte) 1, (short) 430 ),
    GOLDEN_HELMET( (byte) 1, (short) 78 ),
    GOLDEN_CHESTPLATE( (byte) 1, (short) 113 ),
    GOLDEN_LEGGINGS( (byte) 1, (short) 106 ),
    GOLDEN_BOOTS( (byte) 1, (short) 92 ),
    FLINT,
    RAW_PORKCHOP,
    COOKED_PORKCHOP,
    PAINTING,
    GOLDEN_APPLE,
    SIGN( (byte) 16 ),
    WOODEN_DOOR,
    BUCKET( (byte) 16 ),
    MINECART( (byte) 1 ),
    SADDLE( (byte) 1 ),
    IRON_DOOR,
    REDSTONE,
    SNOWBALL( (byte) 16 ),
    BOAT( (byte) 1 ),
    LEATHER,
    BRICK,
    CLAY_BALL,
    SUGAR_CANE,
    PAPER,
    BOOK,
    SLIMEBALL,
    MINECART_WITH_CHEST( (byte) 1 ),
    EGG( (byte) 16 ),
    COMPASS,
    FISHING_ROD( (byte) 1, (short) 65 ),
    CLOCK,
    GLOWSTONE_DUST,
    RAW_FISH,
    COOKED_FISH,
    DYE,
    BONE,
    SUGAR,
    CAKE( (byte) 1 ),
    BED( (byte) 1 ),
    REDSTONE_REPEATER,
    COOKIE,
    FILLED_MAP,
    SHEARS( (byte) 1, (short) 238 ),
    MELON,
    PUMPKIN_SEEDS,
    MELON_SEEDS,
    RAW_BEEF,
    STEAK,
    RAW_CHICKEN,
    COOKED_CHICKEN,
    ROTTEN_FLESH,
    ENDER_PEARL( (byte) 16 ),
    BLAZE_ROD,
    GHAST_TEAR,
    GOLD_NUGGET,
    NETHER_WART,
    POTION( (byte) 1 ),
    GLASS_BOTTLE,
    SPIDER_EYE,
    FERMENTED_SPIDER_EYE,
    BLAZE_POWDER,
    MAGMA_CREAM,
    BREWING_STAND,
    CAULDRON,
    EYE_OF_ENDER,
    GLISTERING_MELON,
    SPAWN_EGG,
    EXPERIENCE_BOTTLE,
    FIRE_CHARGE,
    EMERALD,
    ITEM_FRAME,
    FLOWER_POT,
    CARROT,
    POTATO,
    BAKED_POTATO,
    POISONOUS_POTATO,
    MAP,
    GOLDEN_CARROT,
    MOB_HEAD,
    CARROT_ON_A_STICK( (byte) 1 ),
    NETHER_STAR,
    PUMPKIN_PIE,
    ENCHANTED_BOOK( (byte) 1 ),
    COMPARATOR,
    NETHER_BRICK,
    NETHER_QUARTZ,
    MINECART_WITH_TNT( (byte) 1 ),
    MINECART_WITH_HOPPER( (byte) 1 ),
    PRISMARINE_SHARD,
    HOPPER,
    RAW_RABBIT,
    COOKED_RABBIT,
    RABBIT_STEW( (byte) 1 ),
    RABBIT_FOOT,
    RABBIT_HIDE,
    LEATHER_HORSE_ARMOR( (byte) 1 ),
    IRON_HORSE_ARMOR( (byte) 1 ),
    GOLDEN_HORSE_ARMOR( (byte) 1 ),
    DIAMOND_HORSE_ARMOR( (byte) 1 ),
    LEAD,
    NAME_TAG,
    PRISMARINE_CRYSTALS,
    MUTTON,
    COOKED_MUTTON,
    END_CRYSTAL,
    SPRUCE_DOOR,
    BIRCH_DOOR,
    JUNGLE_DOOR,
    ACACIA_DOOR,
    DARK_OAK_DOOR,
    CHORUS_FRUIT,
    POPPED_CHORUS_FRUIT,
    DRAGON_BREATH,
    SPLASH_POTION( (byte) 1 ),
    LINGERING_POTION( (byte) 1 ),
    ELYTRA( (byte) 1 ),
    SHULKER_SHELL,
    BEETROOT,
    BEETROOT_SEEDS,
    BEETROOT_SOUP( (byte) 1 ),
    RAW_SALMON,
    CLOWNFISH,
    PUFFERFISH,
    COOKED_SALMON,
    ENCHANTED_GOLDEN_APPLE,
    CHALKBOARD( (byte) 1 ),
    PORTFOLIO( (byte) 1 ),
    CAMERA;
    // CHECKSTYLE:ON
    // TODO: Documentation

    private byte maximumAmount;
    private short maximumDurability;

    Material() {
        this.maximumAmount = 64;
    }

    Material( byte maximumAmount ) {
        this.maximumAmount = maximumAmount;
    }

    Material( byte maximumAmount, short maximumDurability ) {
        this.maximumAmount = maximumAmount;
        this.maximumDurability = maximumDurability;
    }

    /**
     * Get the amount of maximum items in a stack
     *
     * @return the maximum amount of items in a stack
     */
    public byte getMaximumAmount() {
        return this.maximumAmount;
    }

}
